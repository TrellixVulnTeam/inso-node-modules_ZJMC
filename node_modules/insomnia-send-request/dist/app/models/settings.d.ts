import type { BaseModel } from './index';
import * as hotkeys from '../common/hotkeys';
import type { HttpVersion } from '../common/constants';
export interface PluginConfig {
    disabled: boolean;
}
export declare type PluginConfigMap = Record<string, PluginConfig>;
interface BaseSettings {
    autoHideMenuBar: boolean;
    autocompleteDelay: number;
    deviceId: string | null;
    disableHtmlPreviewJs: boolean;
    disableResponsePreviewLinks: boolean;
    disableUpdateNotification: boolean;
    editorFontSize: number;
    editorIndentSize: number;
    editorIndentWithTabs: boolean;
    editorKeyMap: string;
    editorLineWrapping: boolean;
    enableAnalytics: boolean;
    environmentHighlightColorStyle: string;
    filterResponsesByEnv: boolean;
    followRedirects: boolean;
    clearOAuth2SessionOnRestart: boolean;
    fontInterface: string | null;
    fontMonospace: string | null;
    fontSize: number;
    fontVariantLigatures: boolean;
    forceVerticalLayout: boolean;
    hotKeyRegistry: hotkeys.HotKeyRegistry;
    httpProxy: string;
    httpsProxy: string;
    lineWrapping?: boolean;
    maxHistoryResponses: number;
    maxRedirects: number;
    maxTimelineDataSizeKB: number;
    noProxy: string;
    nunjucksPowerUserMode: boolean;
    pluginConfig: PluginConfigMap;
    pluginPath: string;
    preferredHttpVersion: HttpVersion;
    proxyEnabled: boolean;
    showPasswords: boolean;
    theme: string;
    autoDetectColorScheme: boolean;
    lightTheme: string;
    darkTheme: string;
    timeout: number;
    updateAutomatically: boolean;
    updateChannel: string;
    useBulkHeaderEditor: boolean;
    useBulkParametersEditor: boolean;
    validateSSL: boolean;
    hasPromptedToMigrateFromDesigner: boolean;
    hasPromptedOnboarding: boolean;
    hasPromptedAnalytics: boolean;
}
export declare type Settings = BaseModel & BaseSettings;
export declare const name = "Settings";
export declare const type = "Settings";
export declare const prefix = "set";
export declare const canDuplicate = false;
export declare const canSync = false;
export declare function init(): BaseSettings;
export declare function migrate(doc: Settings): Settings;
export declare function all(): Promise<Settings[]>;
export declare function create(patch?: Partial<Settings>): Promise<Settings>;
export declare function update(settings: Settings, patch: Partial<Settings>): Promise<Settings>;
export declare function patch(patch: Partial<Settings>): Promise<Settings>;
export declare function getOrCreate(): Promise<Settings>;
export {};
//# sourceMappingURL=settings.d.ts.map