import type { BaseModel } from './index';
import type { Workspace } from './workspace';
import type { RequestGroup } from './request-group';
export declare const name = "Stats";
export declare const type = "Stats";
export declare const prefix = "sta";
export declare const canDuplicate = false;
export declare const canSync = false;
interface BaseStats {
    currentLaunch: number | null;
    lastLaunch: number | null;
    currentVersion: string | null;
    lastVersion: string | null;
    launches: number;
    createdRequests: number;
    deletedRequests: number;
    executedRequests: number;
}
export declare type Stats = BaseModel & BaseStats;
export declare function init(): BaseStats;
export declare function migrate(doc: Stats): Stats;
export declare function create(patch?: Partial<Stats>): Promise<Stats>;
export declare function update(patch: Partial<Stats>): Promise<Stats>;
export declare function get(): Promise<Stats>;
export declare function incrementRequestStats({ createdRequests, deletedRequests, executedRequests, }: Partial<Stats>): Promise<void>;
export declare function incrementCreatedRequests(): Promise<void>;
export declare function incrementDeletedRequests(): Promise<void>;
export declare function incrementExecutedRequests(): Promise<void>;
export declare function incrementCreatedRequestsForDescendents(doc: Workspace | RequestGroup): Promise<void>;
export declare function incrementDeletedRequestsForDescendents(doc: Workspace | RequestGroup): Promise<void>;
export {};
//# sourceMappingURL=stats.d.ts.map