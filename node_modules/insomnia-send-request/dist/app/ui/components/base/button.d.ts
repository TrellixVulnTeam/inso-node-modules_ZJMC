import React, { ButtonHTMLAttributes, PureComponent, ReactNode } from 'react';
export interface ButtonProps<T> {
    children: ReactNode;
    value?: T;
    className?: string;
    onDisabledClick?: React.MouseEventHandler<HTMLButtonElement> | ((value: T | undefined, e: React.MouseEvent<HTMLButtonElement>) => void);
    onClick?: React.MouseEventHandler<HTMLButtonElement> | ((value: T | undefined, e: React.MouseEvent<HTMLButtonElement>) => void);
    disabled?: boolean;
    tabIndex?: number;
    type?: ButtonHTMLAttributes<HTMLButtonElement>['type'];
    id?: string;
    title?: string;
}
declare class Button<T> extends PureComponent<ButtonProps<T>> {
    _handleClick(e: React.MouseEvent<HTMLButtonElement>): void;
    render(): JSX.Element;
}
export default Button;
//# sourceMappingURL=button.d.ts.map